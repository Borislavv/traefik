cache:
  env: "dev"
  enabled: true

  proxy:
    name: "traefik.star"                          # Proxy server name
    from: "http://localhost:8021"                 # Backend (example of full qualified url: http://localhost:8021)
    to: ":8020"                                   # Current server port
    rate: 1000000                                 # Rate limiting reqs to backend per second.
    timeout: "1m"                                 # Timeout for requests to backend.

  metrics:
    enabled: true

  k8s:
    probe:
      timeout: "5s"

  persistence:
    dump:
      enabled: true
      dump_dir: "public/dump" # dump dir.
      dump_name: "cache.dump" # dump name
      max_versions: 3
      gzip: false
      crc32_control_sum: true
    mock:
      enabled: false
      length: 10000000

  logs:
    level: "info" # Any zerolog.Level.
    stats: true   # Should the statistic like num evictions, refreshes, rps, memory usage and so on be written in /std/out?

  forceGC:
    enabled: true
    interval: "10s"

  lifetime:
    max_req_dur: "1s"                          # If a request lifetime is longer than 100ms then request will be canceled by context.
    escape_max_req_dur_header: "X-Google-Bot"  # If the header exists the timeout above will be skipped.

  preallocate:
    num_shards: 2048  # Fixed constant (see `NumOfShards` in code). Controls the number of sharded maps.
    per_shard: 768    # Preallocated map size per shard. Without resizing, this supports 2048*8196=~16785408 keys in total.
    # Note: this is an upper-bound estimate and may vary depending on hash distribution quality.

  eviction:
    enabled: true
    threshold: 0.95    # Trigger eviction when cache memory usage exceeds 90% of its configured limit.

  storage:
    size: 34359738368 # 32GB of maximum allowed memory for the in-memory cache (in bytes).

  refresh:
    enabled: true     # Should this be run?
    ttl: "24h"        # Will be used be default with 200 status code.
    rate: 1000        # Rate limiting reqs to backend per second.
    scan_rate: 10000  # Rate limiting of num scans items per second.
    beta: 0.4         # Controls randomness in refresh timing to avoid thundering herd (from 0 to 1).
    coefficient: 0.5  # Starts attempts to renew data after TTL*coefficient=50% (12h if whole TTL is 24h)

  rules:
    /api/v2/pagedata:
      refresh:
        enabled: true     # Should this be run?
        ttl: "12m"        # Will be used be default with 200 status code.
        beta: 0.4         # Controls randomness in refresh timing to avoid thundering herd (from 0 to 1).
        coefficient: 0.1  # Starts attempts to renew data after TTL*coefficient=50% (12h if whole TTL is 24h)
      cache_key:
        query: # Match query parameters by prefix.
          - project[id]
          - domain
          - language
          - choice
        headers:
          - Accept-Encoding
      cache_value:
        headers:
          - Content-Type
          - Content-Encoding
          - Cache-Control
          - Vary
          - Strict-Transport-Security
          - Content-Length
          - Cache-Control
          - X-Content-Digest
          - Age

    /api/v1/pagecontent:
      cache_key:
        query: # Match query parameters by prefix.
          - project[id]
          - domain
          - language
          - choice
        headers:
          - Accept-Encoding
      cache_value:
        headers:
          - Content-Type
          - Content-Encoding
          - Cache-Control
          - Vary
          - Strict-Transport-Security
          - Content-Length
          - Cache-Control
          - X-Content-Digest
          - Age